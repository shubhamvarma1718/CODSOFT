task 2: developing a a simple to do list

#include<iostream>
#include<vector>
using namespace std;

struct Task {
    string name;
    bool completed;
};

vector<Task> tasks;

void addTask(string name) {
    tasks.push_back({name, false});
}

void viewTasks() {
    for(int i = 0; i < tasks.size(); i++) {
        cout << i+1 << ". " << tasks[i].name;
        if(tasks[i].completed)
            cout << " (completed)";
        cout << endl;
    }
}

void markTaskAsCompleted(int index) {
    if(index >= 1 && index <= tasks.size())
        tasks[index-1].completed = true;
    else
        cout << "Invalid task number!" << endl;
}

void removeTask(int index) {
    if(index >= 1 && index <= tasks.size())
        tasks.erase(tasks.begin() + index - 1);
    else
        cout << "Invalid task number!" << endl;
}

int main() {
    int choice, index;
    string name;

    while(true) {
        cout << "1. Add Task\n2. View Tasks\n3. Mark Task as Completed\n4. Remove Task\n5. Exit\nEnter your choice: ";
        cin >> choice;

        switch(choice) {
            case 1:
                cout << "Enter task name: ";
                cin >> name;
                addTask(name);
                break;
            case 2:
                viewTasks();
                break;
            case 3:
                cout << "Enter task number to mark as completed: ";
                cin >> index;
                markTaskAsCompleted(index);
                break;
            case 4:
                cout << "Enter task number to remove: ";
                cin >> index;
                removeTask(index);
                break;
            case 5:
                return 0;
            default:
                cout << "Invalid choice!" << endl;
        }
    }

    return 0;
}
